/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/index.php/apps/files/api/v1/thumbnail/{x}/{y}/{file}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Gets a thumbnail of the specified file
         * @deprecated
         */
        get: operations["api-get-thumbnail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/directEditing": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the direct editing capabilities */
        get: operations["direct_editing-info"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/directEditing/templates/{editorId}/{creatorId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the templates for direct editing */
        get: operations["direct_editing-templates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/directEditing/open": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Open a file for direct editing */
        post: operations["direct_editing-open"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/directEditing/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a file for direct editing */
        post: operations["direct_editing-create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List the available templates */
        get: operations["template-list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/templates/fields/{fileId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List the fields for the template specified by the given file ID */
        get: operations["template-list-template-fields"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/templates/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a template */
        post: operations["template-create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/templates/path": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Initialize the template directory */
        post: operations["template-path"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/transferownership": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Transfer the ownership to another user */
        post: operations["transfer_ownership-transfer"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/transferownership/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Accept an ownership transfer */
        post: operations["transfer_ownership-accept"];
        /** Reject an ownership transfer */
        delete: operations["transfer_ownership-reject"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/openlocaleditor": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a local editor */
        post: operations["open_local_editor-create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/openlocaleditor/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Validate a local editor */
        post: operations["open_local_editor-validate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/folder-tree": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns the folder tree of the user */
        get: operations["api-get-folder-tree"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files/api/v1/convert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Converts a file from one MIME type to another */
        post: operations["conversion_api-convert"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        Capabilities: {
            files: {
                windows_compatible_filenames: boolean;
                $comment: string | null;
                bigfilechunking: boolean;
                blacklisted_files: Record<string, never>[];
                forbidden_filenames: string[];
                forbidden_filename_basenames: string[];
                forbidden_filename_characters: string[];
                forbidden_filename_extensions: string[];
                chunked_upload: {
                    /** Format: int64 */
                    max_size: number;
                    /** Format: int64 */
                    max_parallel_count: number;
                };
                file_conversions: {
                    from: string;
                    to: string;
                    extension: string;
                    displayName: string;
                }[];
                directEditing: {
                    url: string;
                    etag: string;
                    supportsFileId: boolean;
                };
            };
        };
        FolderTree: {
            /** Format: int64 */
            id: number;
            basename: string;
            displayName?: string;
            children: Record<string, never>[];
        }[];
        OCSMeta: {
            status: string;
            statuscode: number;
            message?: string;
            totalitems?: string;
            itemsperpage?: string;
        };
        Template: {
            templateType: string;
            templateId: string;
            basename: string;
            etag: string;
            /** Format: int64 */
            fileid: number;
            filename: string;
            /** Format: int64 */
            lastmod: number;
            mime: string;
            size: number;
            type: string;
            hasPreview: boolean;
            previewUrl: string | null;
            fields: components["schemas"]["TemplateField"][];
        };
        TemplateField: {
            index: string;
            type: string;
            alias: string | null;
            tag: string | null;
            /** Format: int64 */
            id: number | null;
            content?: string;
            checked?: boolean;
        };
        TemplateFile: {
            basename: string;
            etag: string;
            /** Format: int64 */
            fileid: number;
            filename: string | null;
            /** Format: int64 */
            lastmod: number;
            mime: string;
            /** Format: int64 */
            size: number;
            type: string;
            hasPreview: boolean;
        };
        TemplateFileCreator: {
            app: string;
            label: string;
            extension: string;
            iconClass: string | null;
            iconSvgInline: string | null;
            mimetypes: string[];
            /** Format: double */
            ratio: number | null;
            actionLabel: string;
        };
        TemplateFileCreatorWithTemplates: components["schemas"]["TemplateFileCreator"] & {
            templates: components["schemas"]["Template"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
    "api-get-thumbnail": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Width of the thumbnail */
                x: number;
                /** @description Height of the thumbnail */
                y: number;
                /** @description URL-encoded filename */
                file: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Thumbnail returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
            /** @description Getting thumbnail is not possible */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
            /** @description File not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
        };
    };
    "direct_editing-info": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Direct editing capabilities returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                editors: {
                                    [key: string]: {
                                        id: string;
                                        name: string;
                                        mimetypes: string[];
                                        optionalMimetypes: string[];
                                        secure: boolean;
                                    };
                                };
                                creators: {
                                    [key: string]: {
                                        id: string;
                                        editor: string;
                                        name: string;
                                        extension: string;
                                        templates: boolean;
                                        mimetypes: string[];
                                    };
                                };
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "direct_editing-templates": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the editor */
                editorId: string;
                /** @description ID of the creator */
                creatorId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Templates returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                templates: {
                                    [key: string]: {
                                        id: string;
                                        title: string;
                                        preview: string | null;
                                        extension: string;
                                        mimetype: string;
                                    };
                                };
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                message: string;
                            };
                        };
                    };
                };
            };
        };
    };
    "direct_editing-open": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Path of the file */
                    path: string;
                    /**
                     * @description ID of the editor
                     * @default null
                     */
                    editorId?: string | null;
                    /**
                     * Format: int64
                     * @description ID of the file
                     * @default null
                     */
                    fileId?: number | null;
                };
            };
        };
        responses: {
            /** @description URL for direct editing returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                url: string;
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Opening file is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                message: string;
                            };
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                message: string;
                            };
                        };
                    };
                };
            };
        };
    };
    "direct_editing-create": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Path of the file */
                    path: string;
                    /** @description ID of the editor */
                    editorId: string;
                    /** @description ID of the creator */
                    creatorId: string;
                    /**
                     * @description ID of the template
                     * @default null
                     */
                    templateId?: string | null;
                };
            };
        };
        responses: {
            /** @description URL for direct editing returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                url: string;
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Opening file is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                message: string;
                            };
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                message: string;
                            };
                        };
                    };
                };
            };
        };
    };
    "template-list": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Available templates returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["TemplateFileCreatorWithTemplates"][];
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "template-list-template-fields": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description File ID of the template */
                fileId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fields returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                [key: string]: components["schemas"]["TemplateField"];
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "template-create": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Path of the file */
                    filePath: string;
                    /**
                     * @description Name of the template
                     * @default
                     */
                    templatePath?: string;
                    /**
                     * @description Type of the template
                     * @default user
                     */
                    templateType?: string;
                    /**
                     * @description Fields of the template
                     * @default []
                     */
                    templateFields?: components["schemas"]["TemplateField"][];
                };
            };
        };
        responses: {
            /** @description Template created successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["TemplateFile"];
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Creating template is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "template-path": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * @description Path of the template directory
                     * @default
                     */
                    templatePath?: string;
                    /**
                     * @description Whether to copy the system templates to the template directory
                     * @default false
                     */
                    copySystemTemplates?: boolean;
                };
            };
        };
        responses: {
            /** @description Template directory initialized successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                template_path: string;
                                templates: components["schemas"]["TemplateFileCreator"][];
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Initializing the template directory is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "transfer_ownership-transfer": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Username of the recipient */
                    recipient: string;
                    /** @description Path of the file */
                    path: string;
                };
            };
        };
        responses: {
            /** @description Ownership transferred successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Transferring ownership is not possible */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Transferring ownership is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "transfer_ownership-accept": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the ownership transfer */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Ownership transfer accepted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Accepting ownership transfer is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Ownership transfer not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "transfer_ownership-reject": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the ownership transfer */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Ownership transfer rejected successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Rejecting ownership transfer is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Ownership transfer not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "open_local_editor-create": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Path of the file */
                    path: string;
                };
            };
        };
        responses: {
            /** @description Local editor returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                userId: string | null;
                                pathHash: string;
                                /** Format: int64 */
                                expirationTime: number;
                                token: string;
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "open_local_editor-validate": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description Token of the local editor */
                token: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Path of the file */
                    path: string;
                };
            };
        };
        responses: {
            /** @description Local editor validated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                userId: string;
                                pathHash: string;
                                /** Format: int64 */
                                expirationTime: number;
                                token: string;
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Local editor not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "api-get-folder-tree": {
        parameters: {
            query?: {
                /** @description The path relative to the user folder */
                path?: string;
                /** @description The depth of the tree */
                depth?: number;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Folder tree returned successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FolderTree"];
                };
            };
            /** @description Invalid folder path */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
            /** @description Folder not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
        };
    };
    "conversion_api-convert": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: int64
                     * @description ID of the file to be converted
                     */
                    fileId: number;
                    /** @description The MIME type to which you want to convert the file */
                    targetMimeType: string;
                    /**
                     * @description The target path of the converted file. Written to a temporary file if left empty
                     * @default null
                     */
                    destination?: string | null;
                };
            };
        };
        responses: {
            /** @description File was converted and written to the destination or temporary file */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                path: string;
                                /** Format: int64 */
                                fileId: number;
                            };
                        };
                    };
                };
            };
            /** @description Current user is not logged in */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description The file to be converted was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
}
